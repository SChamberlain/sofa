on: [push, pull_request]

name: R-check

jobs:
  R-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.rshort }}-couch(${{ matrix.config.couch }}))

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-16.04, r: 'release', rshort: 'rel', couch: 'latest', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: 'oldrel', rshort: 'old', couch: 'latest', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: 'release', rshort: 'rel', couch: '2.3', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: 'release', rshort: 'rel', couch: '2.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: 'release', rshort: 'rel', couch: '1.7', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}
        
    services:
      couchdb:
        image: couchdb:${{ matrix.config.couch }}
        env:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: password
        ports:
          - 5984:5984

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.rspm }}
      COUCHDB_TEST_USER: admin
      COUCHDB_TEST_PWD: password

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: Rscript -e "install.packages('remotes')" -e "remotes::install_deps(dependencies = TRUE)" -e "remotes::install_cran('rcmdcheck')"

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '${{ matrix.config.args }}'), error_on = 'warning', check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-16.04' && matrix.config.r == 'release'
        run: |
          Rscript -e 'remotes::install_github("r-lib/covr@gh-actions")'
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'

